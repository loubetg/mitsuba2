//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_61
.address_size 64

	// .globl	_Z15ray_gen_closestv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 4 .u32 fill_surface_interaction;
.global .align 4 .b8 top_object[4];
.global .align 8 .u64 accel;
.global .align 8 .u64 shape_ptr;
.global .align 4 .u32 launch_index;
.global .align 4 .b8 p[12];
.global .align 8 .b8 uv[8];
.global .align 4 .b8 ns[12];
.global .align 4 .b8 ng[12];
.global .align 4 .b8 dp_du[12];
.global .align 4 .b8 dp_dv[12];
.global .align 4 .b8 ray[36];
.global .align 1 .b8 in_mask[1];
.global .align 1 .b8 in_ox[1];
.global .align 1 .b8 in_oy[1];
.global .align 1 .b8 in_oz[1];
.global .align 1 .b8 in_dx[1];
.global .align 1 .b8 in_dy[1];
.global .align 1 .b8 in_dz[1];
.global .align 1 .b8 in_mint[1];
.global .align 1 .b8 in_maxt[1];
.global .align 1 .b8 in_kappa[1];
.global .align 1 .b8 out_t[1];
.global .align 1 .b8 out_u[1];
.global .align 1 .b8 out_v[1];
.global .align 1 .b8 out_ng_x[1];
.global .align 1 .b8 out_ng_y[1];
.global .align 1 .b8 out_ng_z[1];
.global .align 1 .b8 out_ns_x[1];
.global .align 1 .b8 out_ns_y[1];
.global .align 1 .b8 out_ns_z[1];
.global .align 1 .b8 out_p_x[1];
.global .align 1 .b8 out_p_y[1];
.global .align 1 .b8 out_p_z[1];
.global .align 1 .b8 out_dp_du_x[1];
.global .align 1 .b8 out_dp_du_y[1];
.global .align 1 .b8 out_dp_du_z[1];
.global .align 1 .b8 out_dp_dv_x[1];
.global .align 1 .b8 out_dp_dv_y[1];
.global .align 1 .b8 out_dp_dv_z[1];
.global .align 1 .b8 out_shape_ptr[1];
.global .align 1 .b8 out_primitive_id[1];
.global .align 1 .b8 out_hit[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo24fill_surface_interactionE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5accelE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9shape_ptrE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1pE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2uvE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2nsE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2ngE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5dp_duE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5dp_dvE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename24fill_surface_interactionE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5accelE[7] = {118, 111, 105, 100, 32, 42, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9shape_ptrE[19] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 32, 108, 111, 110, 103, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1pE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2uvE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2nsE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2ngE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5dp_duE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5dp_dvE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[4] = {82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum24fill_surface_interactionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5accelE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9shape_ptrE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1pE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2uvE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2nsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2ngE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5dp_duE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5dp_dvE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic24fill_surface_interactionE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5accelE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9shape_ptrE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic1pE[12] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 112, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic2uvE[13] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 117, 118, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic2nsE[13] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic2ngE[13] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 103, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5dp_duE[16] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 100, 112, 95, 100, 117, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5dp_dvE[16] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 100, 112, 95, 100, 118, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation24fill_surface_interactionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5accelE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9shape_ptrE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1pE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2uvE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2nsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2ngE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5dp_duE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5dp_dvE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str1[70] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 82, 65, 67, 69, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str2[236] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 100, 101, 116, 97, 105, 108, 115, 32, 58, 32, 37, 115, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str3[138] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str4[148] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str5[136] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str6[98] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str7[126] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str8[99] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str9[135] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str10[94] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str11[53] = {32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str12[133] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str13[141] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str14[200] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str15[164] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 65, 89, 76, 79, 65, 68, 95, 65, 67, 67, 69, 83, 83, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 118, 97, 108, 117, 101, 32, 111, 102, 102, 115, 101, 116, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 118, 97, 108, 117, 101, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 112, 97, 121, 108, 111, 97, 100, 32, 115, 105, 122, 101, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str16[123] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 99, 111, 100, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str18[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str19[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z15ray_gen_closestv(

)
{
	.local .align 1 .b8 	__local_depot0[1];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<79>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.global.u32 	%rd3, [launch_index];
	mov.u64 	%rd55, in_ox;
	cvta.global.u64 	%rd2, %rd55;
	mov.u32 	%r18, 1;
	mov.u32 	%r16, 4;
	mov.u64 	%rd54, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r18, %r16, %rd3, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f1, [%rd1];
	ld.global.u32 	%rd9, [launch_index];
	mov.u64 	%rd56, in_oy;
	cvta.global.u64 	%rd8, %rd56;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r18, %r16, %rd9, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f2, [%rd7];
	ld.global.u32 	%rd15, [launch_index];
	mov.u64 	%rd57, in_oz;
	cvta.global.u64 	%rd14, %rd57;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r18, %r16, %rd15, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f3, [%rd13];
	ld.global.u32 	%rd21, [launch_index];
	mov.u64 	%rd58, in_dx;
	cvta.global.u64 	%rd20, %rd58;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r18, %r16, %rd21, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f4, [%rd19];
	ld.global.u32 	%rd27, [launch_index];
	mov.u64 	%rd59, in_dy;
	cvta.global.u64 	%rd26, %rd59;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r18, %r16, %rd27, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f5, [%rd25];
	ld.global.u32 	%rd33, [launch_index];
	mov.u64 	%rd60, in_dz;
	cvta.global.u64 	%rd32, %rd60;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r18, %r16, %rd33, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f6, [%rd31];
	ld.global.u32 	%rd39, [launch_index];
	mov.u64 	%rd61, in_mint;
	cvta.global.u64 	%rd38, %rd61;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r18, %r16, %rd39, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f7, [%rd37];
	ld.global.u32 	%rd45, [launch_index];
	mov.u64 	%rd62, in_maxt;
	cvta.global.u64 	%rd44, %rd62;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd44, %r18, %r16, %rd45, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f8, [%rd43];
	ld.global.u32 	%rd51, [launch_index];
	mov.u64 	%rd63, in_mask;
	cvta.global.u64 	%rd50, %rd63;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r18, %r18, %rd51, %rd54, %rd54, %rd54);
	// inline asm
	ld.u8 	%rs1, [%rd49];
	setp.eq.s16	%p1, %rs1, 0;
	@%p1 bra 	BB0_2;

	ld.global.u32 	%r19, [top_object];
	mov.u32 	%r21, 255;
	mov.u32 	%r22, 0;
	add.u64 	%rd64, %SP, 0;
	// inline asm
	call _rt_trace_mask_flags_64, (%r19, %f1, %f2, %f3, %f4, %f5, %f6, %r22, %f7, %f8, %r21, %r22, %rd64, %r18);
	// inline asm
	bra.uni 	BB0_3;

BB0_2:
	ld.global.u32 	%rd67, [launch_index];
	mov.u64 	%rd77, out_shape_ptr;
	cvta.global.u64 	%rd66, %rd77;
	mov.u32 	%r25, 8;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd66, %r18, %r25, %rd67, %rd54, %rd54, %rd54);
	// inline asm
	st.u64 	[%rd65], %rd54;
	ld.global.u32 	%rd73, [launch_index];
	mov.u64 	%rd78, out_t;
	cvta.global.u64 	%rd72, %rd78;
	// inline asm
	call (%rd71), _rt_buffer_get_64, (%rd72, %r18, %r16, %rd73, %rd54, %rd54, %rd54);
	// inline asm
	mov.u32 	%r28, 2139095040;
	st.u32 	[%rd71], %r28;

BB0_3:
	ret;
}

	// .globl	_Z11ray_gen_anyv
.visible .entry _Z11ray_gen_anyv(

)
{
	.local .align 1 .b8 	__local_depot1[1];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<72>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.global.u32 	%rd3, [launch_index];
	mov.u64 	%rd55, in_ox;
	cvta.global.u64 	%rd2, %rd55;
	mov.u32 	%r18, 1;
	mov.u32 	%r16, 4;
	mov.u64 	%rd54, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r18, %r16, %rd3, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f1, [%rd1];
	ld.global.u32 	%rd9, [launch_index];
	mov.u64 	%rd56, in_oy;
	cvta.global.u64 	%rd8, %rd56;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r18, %r16, %rd9, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f2, [%rd7];
	ld.global.u32 	%rd15, [launch_index];
	mov.u64 	%rd57, in_oz;
	cvta.global.u64 	%rd14, %rd57;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r18, %r16, %rd15, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f3, [%rd13];
	ld.global.u32 	%rd21, [launch_index];
	mov.u64 	%rd58, in_dx;
	cvta.global.u64 	%rd20, %rd58;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r18, %r16, %rd21, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f4, [%rd19];
	ld.global.u32 	%rd27, [launch_index];
	mov.u64 	%rd59, in_dy;
	cvta.global.u64 	%rd26, %rd59;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r18, %r16, %rd27, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f5, [%rd25];
	ld.global.u32 	%rd33, [launch_index];
	mov.u64 	%rd60, in_dz;
	cvta.global.u64 	%rd32, %rd60;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r18, %r16, %rd33, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f6, [%rd31];
	ld.global.u32 	%rd39, [launch_index];
	mov.u64 	%rd61, in_mint;
	cvta.global.u64 	%rd38, %rd61;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r18, %r16, %rd39, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f7, [%rd37];
	ld.global.u32 	%rd45, [launch_index];
	mov.u64 	%rd62, in_maxt;
	cvta.global.u64 	%rd44, %rd62;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd44, %r18, %r16, %rd45, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f8, [%rd43];
	ld.global.u32 	%rd51, [launch_index];
	mov.u64 	%rd63, in_mask;
	cvta.global.u64 	%rd50, %rd63;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r18, %r18, %rd51, %rd54, %rd54, %rd54);
	// inline asm
	ld.u8 	%rs1, [%rd49];
	setp.eq.s16	%p1, %rs1, 0;
	@%p1 bra 	BB1_2;

	ld.global.u32 	%r19, [top_object];
	mov.u32 	%r20, 0;
	mov.u32 	%r21, 255;
	add.u64 	%rd64, %SP, 0;
	// inline asm
	call _rt_trace_mask_flags_64, (%r19, %f1, %f2, %f3, %f4, %f5, %f6, %r20, %f7, %f8, %r21, %r16, %rd64, %r18);
	// inline asm
	bra.uni 	BB1_3;

BB1_2:
	ld.global.u32 	%rd67, [launch_index];
	mov.u64 	%rd71, out_hit;
	cvta.global.u64 	%rd66, %rd71;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd66, %r18, %r18, %rd67, %rd54, %rd54, %rd54);
	// inline asm
	mov.u16 	%rs2, 0;
	st.u8 	[%rd65], %rs2;

BB1_3:
	ret;
}

	// .globl	_Z16ray_gen_occluderv
.visible .entry _Z16ray_gen_occluderv(

)
{
	.local .align 4 .b8 	__local_depot2[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<226>;
	.reg .b32 	%r<406>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<262>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.global.u32 	%rd12, [launch_index];
	mov.u64 	%rd70, in_kappa;
	cvta.global.u64 	%rd11, %rd70;
	mov.u32 	%r58, 1;
	mov.u32 	%r56, 4;
	mov.u64 	%rd261, 0;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r58, %r56, %rd12, %rd261, %rd261, %rd261);
	// inline asm
	ld.f32 	%f1, [%rd10];
	ld.global.u32 	%r1, [launch_index];
	cvt.u64.u32	%rd18, %r1;
	mov.u64 	%rd71, in_ox;
	cvta.global.u64 	%rd17, %rd71;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd17, %r58, %r56, %rd18, %rd261, %rd261, %rd261);
	// inline asm
	ld.f32 	%f2, [%rd16];
	ld.global.u32 	%rd24, [launch_index];
	mov.u64 	%rd72, in_oy;
	cvta.global.u64 	%rd23, %rd72;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r58, %r56, %rd24, %rd261, %rd261, %rd261);
	// inline asm
	ld.f32 	%f3, [%rd22];
	ld.global.u32 	%rd30, [launch_index];
	mov.u64 	%rd73, in_oz;
	cvta.global.u64 	%rd29, %rd73;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd29, %r58, %r56, %rd30, %rd261, %rd261, %rd261);
	// inline asm
	ld.f32 	%f4, [%rd28];
	ld.global.u32 	%rd36, [launch_index];
	mov.u64 	%rd74, in_dx;
	cvta.global.u64 	%rd35, %rd74;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd35, %r58, %r56, %rd36, %rd261, %rd261, %rd261);
	// inline asm
	ld.f32 	%f5, [%rd34];
	ld.global.u32 	%rd42, [launch_index];
	mov.u64 	%rd75, in_dy;
	cvta.global.u64 	%rd41, %rd75;
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd41, %r58, %r56, %rd42, %rd261, %rd261, %rd261);
	// inline asm
	ld.f32 	%f6, [%rd40];
	ld.global.u32 	%rd48, [launch_index];
	mov.u64 	%rd76, in_dz;
	cvta.global.u64 	%rd47, %rd76;
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd47, %r58, %r56, %rd48, %rd261, %rd261, %rd261);
	// inline asm
	ld.f32 	%f7, [%rd46];
	ld.global.u32 	%rd54, [launch_index];
	mov.u64 	%rd77, in_mint;
	cvta.global.u64 	%rd53, %rd77;
	// inline asm
	call (%rd52), _rt_buffer_get_64, (%rd53, %r58, %r56, %rd54, %rd261, %rd261, %rd261);
	// inline asm
	ld.f32 	%f8, [%rd52];
	ld.global.u32 	%rd60, [launch_index];
	mov.u64 	%rd78, in_maxt;
	cvta.global.u64 	%rd59, %rd78;
	// inline asm
	call (%rd58), _rt_buffer_get_64, (%rd59, %r58, %r56, %rd60, %rd261, %rd261, %rd261);
	// inline asm
	ld.f32 	%f9, [%rd58];
	ld.global.u32 	%rd66, [launch_index];
	mov.u64 	%rd79, in_mask;
	cvta.global.u64 	%rd65, %rd79;
	// inline asm
	call (%rd64), _rt_buffer_get_64, (%rd65, %r58, %r58, %rd66, %rd261, %rd261, %rd261);
	// inline asm
	ld.u8 	%rs1, [%rd64];
	setp.eq.s16	%p1, %rs1, 0;
	@%p1 bra 	BB2_29;

	add.s32 	%r61, %r1, -176720271;
	shl.b32 	%r62, %r61, 4;
	add.s32 	%r63, %r62, -1383041155;
	add.s32 	%r64, %r1, -1817251798;
	xor.b32  	%r65, %r63, %r64;
	shr.u32 	%r66, %r61, 5;
	add.s32 	%r67, %r66, 2123724318;
	xor.b32  	%r68, %r65, %r67;
	shl.b32 	%r69, %r68, 4;
	add.s32 	%r70, %r69, -1556008596;
	add.s32 	%r71, %r68, 1013904242;
	shr.u32 	%r72, %r68, 5;
	add.s32 	%r73, %r72, -939442524;
	xor.b32  	%r74, %r70, %r71;
	xor.b32  	%r75, %r74, %r73;
	add.s32 	%r76, %r75, %r61;
	shl.b32 	%r77, %r76, 4;
	add.s32 	%r78, %r77, -1383041155;
	add.s32 	%r79, %r76, 1013904242;
	xor.b32  	%r80, %r78, %r79;
	shr.u32 	%r81, %r76, 5;
	add.s32 	%r82, %r81, 2123724318;
	xor.b32  	%r83, %r80, %r82;
	add.s32 	%r84, %r83, %r68;
	shl.b32 	%r85, %r84, 4;
	add.s32 	%r86, %r85, -1556008596;
	add.s32 	%r87, %r84, -626627285;
	shr.u32 	%r88, %r84, 5;
	add.s32 	%r89, %r88, -939442524;
	xor.b32  	%r90, %r86, %r87;
	xor.b32  	%r91, %r90, %r89;
	add.s32 	%r92, %r91, %r76;
	shl.b32 	%r93, %r92, 4;
	add.s32 	%r94, %r93, -1383041155;
	add.s32 	%r95, %r92, -626627285;
	xor.b32  	%r96, %r94, %r95;
	shr.u32 	%r97, %r92, 5;
	add.s32 	%r98, %r97, 2123724318;
	xor.b32  	%r99, %r96, %r98;
	add.s32 	%r100, %r99, %r84;
	shl.b32 	%r101, %r100, 4;
	add.s32 	%r102, %r101, -1556008596;
	add.s32 	%r103, %r100, 2027808484;
	shr.u32 	%r104, %r100, 5;
	add.s32 	%r105, %r104, -939442524;
	xor.b32  	%r106, %r102, %r103;
	xor.b32  	%r107, %r106, %r105;
	add.s32 	%r108, %r107, %r92;
	shl.b32 	%r109, %r108, 4;
	add.s32 	%r110, %r109, -1383041155;
	add.s32 	%r111, %r108, 2027808484;
	xor.b32  	%r112, %r110, %r111;
	shr.u32 	%r113, %r108, 5;
	add.s32 	%r114, %r113, 2123724318;
	xor.b32  	%r115, %r112, %r114;
	add.s32 	%r116, %r115, %r100;
	shl.b32 	%r117, %r116, 4;
	add.s32 	%r118, %r117, -1556008596;
	add.s32 	%r119, %r116, 387276957;
	shr.u32 	%r120, %r116, 5;
	add.s32 	%r121, %r120, -939442524;
	xor.b32  	%r122, %r118, %r119;
	xor.b32  	%r123, %r122, %r121;
	add.s32 	%r124, %r123, %r108;
	shl.b32 	%r125, %r124, 4;
	add.s32 	%r126, %r125, -1383041155;
	add.s32 	%r127, %r124, 387276957;
	xor.b32  	%r128, %r126, %r127;
	shr.u32 	%r129, %r124, 5;
	add.s32 	%r130, %r129, 2123724318;
	xor.b32  	%r131, %r128, %r130;
	add.s32 	%r132, %r131, %r116;
	shl.b32 	%r133, %r132, 4;
	add.s32 	%r134, %r133, -1556008596;
	add.s32 	%r135, %r132, -1253254570;
	shr.u32 	%r136, %r132, 5;
	add.s32 	%r137, %r136, -939442524;
	xor.b32  	%r138, %r134, %r135;
	xor.b32  	%r139, %r138, %r137;
	add.s32 	%r140, %r139, %r124;
	shl.b32 	%r141, %r140, 4;
	add.s32 	%r142, %r141, -1383041155;
	add.s32 	%r143, %r140, -1253254570;
	xor.b32  	%r144, %r142, %r143;
	shr.u32 	%r145, %r140, 5;
	add.s32 	%r146, %r145, 2123724318;
	xor.b32  	%r147, %r144, %r146;
	add.s32 	%r148, %r147, %r132;
	shl.b32 	%r149, %r148, 4;
	add.s32 	%r150, %r149, -1556008596;
	add.s32 	%r151, %r148, 1401181199;
	shr.u32 	%r152, %r148, 5;
	add.s32 	%r153, %r152, -939442524;
	xor.b32  	%r154, %r150, %r151;
	xor.b32  	%r155, %r154, %r153;
	add.s32 	%r156, %r155, %r140;
	shl.b32 	%r157, %r156, 4;
	add.s32 	%r158, %r157, -1383041155;
	add.s32 	%r159, %r156, 1401181199;
	xor.b32  	%r160, %r158, %r159;
	shr.u32 	%r161, %r156, 5;
	add.s32 	%r162, %r161, 2123724318;
	xor.b32  	%r163, %r160, %r162;
	add.s32 	%r164, %r163, %r148;
	shl.b32 	%r165, %r164, 4;
	add.s32 	%r166, %r165, -1556008596;
	add.s32 	%r167, %r164, -239350328;
	shr.u32 	%r168, %r164, 5;
	add.s32 	%r169, %r168, -939442524;
	xor.b32  	%r170, %r166, %r167;
	xor.b32  	%r171, %r170, %r169;
	add.s32 	%r172, %r171, %r156;
	shl.b32 	%r173, %r172, 4;
	add.s32 	%r174, %r173, -1383041155;
	add.s32 	%r175, %r172, -239350328;
	xor.b32  	%r176, %r174, %r175;
	shr.u32 	%r177, %r172, 5;
	add.s32 	%r178, %r177, 2123724318;
	xor.b32  	%r179, %r176, %r178;
	add.s32 	%r180, %r179, %r164;
	shl.b32 	%r181, %r180, 4;
	add.s32 	%r182, %r181, -1556008596;
	add.s32 	%r183, %r180, -1879881855;
	shr.u32 	%r184, %r180, 5;
	add.s32 	%r185, %r184, -939442524;
	xor.b32  	%r186, %r182, %r183;
	xor.b32  	%r187, %r186, %r185;
	add.s32 	%r188, %r187, %r172;
	shl.b32 	%r189, %r188, 4;
	add.s32 	%r190, %r189, -1383041155;
	add.s32 	%r191, %r188, -1879881855;
	xor.b32  	%r192, %r190, %r191;
	shr.u32 	%r193, %r188, 5;
	add.s32 	%r194, %r193, 2123724318;
	xor.b32  	%r195, %r192, %r194;
	add.s32 	%r196, %r195, %r180;
	shl.b32 	%r197, %r196, 4;
	add.s32 	%r198, %r197, -1556008596;
	add.s32 	%r199, %r196, 774553914;
	shr.u32 	%r200, %r196, 5;
	add.s32 	%r201, %r200, -939442524;
	xor.b32  	%r202, %r198, %r199;
	xor.b32  	%r203, %r202, %r201;
	add.s32 	%r204, %r203, %r188;
	shl.b32 	%r205, %r204, 4;
	add.s32 	%r206, %r205, -1383041155;
	add.s32 	%r207, %r204, 774553914;
	xor.b32  	%r208, %r206, %r207;
	shr.u32 	%r209, %r204, 5;
	add.s32 	%r210, %r209, 2123724318;
	xor.b32  	%r211, %r208, %r210;
	add.s32 	%r212, %r211, %r196;
	shl.b32 	%r213, %r212, 4;
	add.s32 	%r214, %r213, -1556008596;
	add.s32 	%r215, %r212, -865977613;
	shr.u32 	%r216, %r212, 5;
	add.s32 	%r217, %r216, -939442524;
	xor.b32  	%r218, %r214, %r215;
	xor.b32  	%r219, %r218, %r217;
	add.s32 	%r220, %r219, %r204;
	shl.b32 	%r221, %r220, 4;
	add.s32 	%r222, %r221, -1383041155;
	add.s32 	%r223, %r220, -865977613;
	xor.b32  	%r224, %r222, %r223;
	shr.u32 	%r225, %r220, 5;
	add.s32 	%r226, %r225, 2123724318;
	xor.b32  	%r227, %r224, %r226;
	add.s32 	%r228, %r227, %r212;
	shl.b32 	%r229, %r228, 4;
	add.s32 	%r230, %r229, -1556008596;
	add.s32 	%r231, %r228, 1788458156;
	shr.u32 	%r232, %r228, 5;
	add.s32 	%r233, %r232, -939442524;
	xor.b32  	%r234, %r230, %r231;
	xor.b32  	%r235, %r234, %r233;
	add.s32 	%r236, %r235, %r220;
	shl.b32 	%r237, %r236, 4;
	add.s32 	%r238, %r237, -1383041155;
	add.s32 	%r239, %r236, 1788458156;
	xor.b32  	%r240, %r238, %r239;
	shr.u32 	%r241, %r236, 5;
	add.s32 	%r242, %r241, 2123724318;
	xor.b32  	%r243, %r240, %r242;
	add.s32 	%r244, %r243, %r228;
	shl.b32 	%r245, %r244, 4;
	add.s32 	%r246, %r245, -1556008596;
	add.s32 	%r247, %r244, 147926629;
	shr.u32 	%r248, %r244, 5;
	add.s32 	%r249, %r248, -939442524;
	xor.b32  	%r250, %r246, %r247;
	xor.b32  	%r251, %r250, %r249;
	add.s32 	%r252, %r251, %r236;
	shl.b32 	%r253, %r252, 4;
	add.s32 	%r254, %r253, -1383041155;
	add.s32 	%r255, %r252, 147926629;
	xor.b32  	%r256, %r254, %r255;
	shr.u32 	%r257, %r252, 5;
	add.s32 	%r258, %r257, 2123724318;
	xor.b32  	%r259, %r256, %r258;
	add.s32 	%r260, %r259, %r244;
	shl.b32 	%r261, %r260, 4;
	add.s32 	%r262, %r261, -1556008596;
	add.s32 	%r263, %r260, -1492604898;
	shr.u32 	%r264, %r260, 5;
	add.s32 	%r265, %r264, -939442524;
	xor.b32  	%r266, %r262, %r263;
	xor.b32  	%r267, %r266, %r265;
	add.s32 	%r268, %r267, %r252;
	shl.b32 	%r269, %r268, 4;
	add.s32 	%r270, %r269, -1383041155;
	add.s32 	%r271, %r268, -1492604898;
	xor.b32  	%r272, %r270, %r271;
	shr.u32 	%r273, %r268, 5;
	add.s32 	%r274, %r273, 2123724318;
	xor.b32  	%r275, %r272, %r274;
	add.s32 	%r276, %r275, %r260;
	shl.b32 	%r277, %r276, 4;
	add.s32 	%r278, %r277, -1556008596;
	add.s32 	%r279, %r276, 1161830871;
	shr.u32 	%r280, %r276, 5;
	add.s32 	%r281, %r280, -939442524;
	xor.b32  	%r282, %r278, %r279;
	xor.b32  	%r283, %r282, %r281;
	add.s32 	%r284, %r283, %r268;
	shl.b32 	%r285, %r284, 4;
	add.s32 	%r286, %r285, -1383041155;
	add.s32 	%r287, %r284, 1161830871;
	xor.b32  	%r288, %r286, %r287;
	shr.u32 	%r289, %r284, 5;
	add.s32 	%r290, %r289, 2123724318;
	xor.b32  	%r291, %r288, %r290;
	add.s32 	%r292, %r291, %r276;
	shl.b32 	%r293, %r292, 4;
	add.s32 	%r294, %r293, -1556008596;
	add.s32 	%r295, %r292, -478700656;
	shr.u32 	%r296, %r292, 5;
	add.s32 	%r297, %r296, -939442524;
	xor.b32  	%r298, %r294, %r295;
	xor.b32  	%r299, %r298, %r297;
	add.s32 	%r396, %r299, %r284;
	mov.b32 	 %r300, %f7;
	and.b32  	%r301, %r300, -2147483648;
	or.b32  	%r302, %r301, 1065353216;
	mov.b32 	 %f64, %r302;
	add.f32 	%f65, %f7, %f64;
	mov.f32 	%f66, 0fBF800000;
	div.rn.f32 	%f67, %f66, %f65;
	mul.f32 	%f68, %f5, %f6;
	mul.f32 	%f10, %f68, %f67;
	mul.f32 	%f69, %f5, %f5;
	mul.f32 	%f70, %f69, %f67;
	fma.rn.f32 	%f11, %f64, %f70, 0f3F800000;
	mul.f32 	%f12, %f64, %f10;
	mul.f32 	%f13, %f5, %f64;
	mul.f32 	%f71, %f6, %f6;
	fma.rn.f32 	%f14, %f71, %f67, %f64;
	mul.f32 	%f72, %f1, 0fC0000000;
	mul.f32 	%f73, %f72, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f74, %f73;
	mov.f32 	%f75, 0fBF317200;
	fma.rn.f32 	%f76, %f74, %f75, %f72;
	mov.f32 	%f77, 0fB5BFBE8E;
	fma.rn.f32 	%f78, %f74, %f77, %f76;
	mul.f32 	%f79, %f78, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f80, %f79;
	add.f32 	%f81, %f74, 0f00000000;
	ex2.approx.f32 	%f82, %f81;
	mul.f32 	%f83, %f80, %f82;
	setp.lt.f32	%p2, %f72, 0fC2D20000;
	selp.f32	%f84, 0f00000000, %f83, %p2;
	setp.gt.f32	%p3, %f72, 0f42D20000;
	selp.f32	%f15, 0f7F800000, %f84, %p3;
	mov.f32 	%f225, 0f7F800000;
	mov.u32 	%r394, 0;

BB2_2:
	mad.lo.s32 	%r303, %r396, 1664525, 1013904223;
	and.b32  	%r304, %r303, 16777215;
	cvt.rn.f32.u32	%f87, %r304;
	mul.f32 	%f88, %f87, 0f33800000;
	mad.lo.s32 	%r396, %r303, 1664525, 1013904223;
	and.b32  	%r305, %r396, 16777215;
	cvt.rn.f32.u32	%f89, %r305;
	mul.f32 	%f90, %f89, 0f33800000;
	fma.rn.f32 	%f25, %f88, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f26, %f90, 0f40000000, 0fBF800000;
	setp.eq.f32	%p4, %f25, 0f00000000;
	setp.eq.f32	%p5, %f26, 0f00000000;
	and.pred  	%p6, %p4, %p5;
	mov.f32 	%f29, 0f00000000;
	mov.f32 	%f214, %f29;
	@%p6 bra 	BB2_7;

	mul.f32 	%f91, %f25, %f25;
	mul.f32 	%f92, %f26, %f26;
	setp.gt.f32	%p7, %f91, %f92;
	@%p7 bra 	BB2_5;
	bra.uni 	BB2_4;

BB2_5:
	div.rn.f32 	%f94, %f26, %f25;
	cvt.f64.f32	%fd5, %f94;
	mul.f64 	%fd8, %fd5, 0d3FE921FB54442D18;
	mov.f32 	%f214, %f25;
	bra.uni 	BB2_6;

BB2_4:
	div.rn.f32 	%f93, %f25, %f26;
	cvt.f64.f32	%fd4, %f93;
	fma.rn.f64 	%fd8, %fd4, 0dBFE921FB54442D18, 0d3FF921FB54442D18;
	mov.f32 	%f214, %f26;

BB2_6:
	cvt.rn.f32.f64	%f29, %fd8;

BB2_7:
	mul.f32 	%f95, %f29, 0f3F22F983;
	cvt.rni.s32.f32	%r404, %f95;
	cvt.rn.f32.s32	%f96, %r404;
	mov.f32 	%f97, 0fBFC90FDA;
	fma.rn.f32 	%f98, %f96, %f97, %f29;
	mov.f32 	%f99, 0fB3A22168;
	fma.rn.f32 	%f100, %f96, %f99, %f98;
	mov.f32 	%f101, 0fA7C234C5;
	fma.rn.f32 	%f215, %f96, %f101, %f100;
	abs.f32 	%f32, %f29;
	setp.leu.f32	%p8, %f32, 0f47CE4780;
	@%p8 bra 	BB2_18;

	setp.eq.f32	%p9, %f32, 0f7F800000;
	@%p9 bra 	BB2_17;
	bra.uni 	BB2_9;

BB2_17:
	mov.f32 	%f104, 0f00000000;
	mul.rn.f32 	%f215, %f29, %f104;
	bra.uni 	BB2_18;

BB2_9:
	mov.b32 	 %r8, %f29;
	shr.u32 	%r9, %r8, 23;
	bfe.u32 	%r308, %r8, 23, 8;
	add.s32 	%r309, %r308, -128;
	shl.b32 	%r310, %r8, 8;
	or.b32  	%r10, %r310, -2147483648;
	shr.u32 	%r11, %r309, 5;
	add.u64 	%rd82, %SP, 0;
	add.u64 	%rd260, %SPL, 0;
	mov.u32 	%r398, 0;
	mov.u64 	%rd259, __cudart_i2opi_f;
	mov.u32 	%r397, -6;

BB2_10:
	.pragma "nounroll";
	ld.const.u32 	%r313, [%rd259];
	// inline asm
	{
	mad.lo.cc.u32   %r311, %r313, %r10, %r398;
	madc.hi.u32     %r398, %r313, %r10,  0;
	}
	// inline asm
	st.local.u32 	[%rd260], %r311;
	add.s64 	%rd260, %rd260, 4;
	add.s64 	%rd259, %rd259, 4;
	add.s32 	%r397, %r397, 1;
	setp.ne.s32	%p10, %r397, 0;
	@%p10 bra 	BB2_10;

	and.b32  	%r16, %r8, -2147483648;
	cvta.to.local.u64 	%rd84, %rd82;
	st.local.u32 	[%rd84+24], %r398;
	mov.u32 	%r316, 6;
	sub.s32 	%r317, %r316, %r11;
	mul.wide.s32 	%rd85, %r317, 4;
	add.s64 	%rd7, %rd84, %rd85;
	ld.local.u32 	%r400, [%rd7];
	ld.local.u32 	%r399, [%rd7+-4];
	and.b32  	%r19, %r9, 31;
	setp.eq.s32	%p11, %r19, 0;
	@%p11 bra 	BB2_13;

	mov.u32 	%r318, 32;
	sub.s32 	%r319, %r318, %r19;
	shr.u32 	%r320, %r399, %r319;
	shl.b32 	%r321, %r400, %r19;
	add.s32 	%r400, %r320, %r321;
	ld.local.u32 	%r322, [%rd7+-8];
	shr.u32 	%r323, %r322, %r319;
	shl.b32 	%r324, %r399, %r19;
	add.s32 	%r399, %r323, %r324;

BB2_13:
	shr.u32 	%r325, %r399, 30;
	shl.b32 	%r326, %r400, 2;
	add.s32 	%r402, %r326, %r325;
	shl.b32 	%r25, %r399, 2;
	shr.u32 	%r327, %r402, 31;
	shr.u32 	%r328, %r400, 30;
	add.s32 	%r26, %r327, %r328;
	setp.eq.s32	%p12, %r327, 0;
	@%p12 bra 	BB2_14;
	bra.uni 	BB2_15;

BB2_14:
	mov.u32 	%r401, %r25;
	mov.u32 	%r403, %r16;
	bra.uni 	BB2_16;

BB2_15:
	not.b32 	%r329, %r402;
	neg.s32 	%r401, %r25;
	setp.eq.s32	%p13, %r25, 0;
	selp.u32	%r330, 1, 0, %p13;
	add.s32 	%r402, %r330, %r329;
	xor.b32  	%r403, %r16, -2147483648;

BB2_16:
	cvt.u64.u32	%rd86, %r402;
	cvt.u64.u32	%rd87, %r401;
	bfi.b64 	%rd88, %rd86, %rd87, 32, 32;
	cvt.rn.f64.s64	%fd6, %rd88;
	mul.f64 	%fd7, %fd6, 0d3BF921FB54442D19;
	cvt.rn.f32.f64	%f102, %fd7;
	neg.f32 	%f103, %f102;
	setp.eq.s32	%p14, %r403, 0;
	selp.f32	%f215, %f102, %f103, %p14;
	setp.eq.s32	%p15, %r16, 0;
	neg.s32 	%r331, %r26;
	selp.b32	%r404, %r26, %r331, %p15;

BB2_18:
	mul.f32 	%f105, %f215, %f215;
	mov.f32 	%f106, 0fBAB607ED;
	mov.f32 	%f107, 0f37CBAC00;
	fma.rn.f32 	%f108, %f107, %f105, %f106;
	mov.f32 	%f109, 0f3D2AAABB;
	fma.rn.f32 	%f110, %f108, %f105, %f109;
	mov.f32 	%f111, 0fBEFFFFFF;
	fma.rn.f32 	%f112, %f110, %f105, %f111;
	mov.f32 	%f113, 0f3F800000;
	fma.rn.f32 	%f114, %f112, %f105, %f113;
	mov.f32 	%f115, 0f00000000;
	fma.rn.f32 	%f116, %f105, %f215, %f115;
	mov.f32 	%f117, 0f3C0885E4;
	mov.f32 	%f118, 0fB94D4153;
	fma.rn.f32 	%f119, %f118, %f105, %f117;
	mov.f32 	%f120, 0fBE2AAAA8;
	fma.rn.f32 	%f121, %f119, %f105, %f120;
	fma.rn.f32 	%f122, %f121, %f116, %f215;
	and.b32  	%r332, %r404, 1;
	setp.eq.b32	%p16, %r332, 1;
	not.pred 	%p17, %p16;
	selp.f32	%f123, %f122, %f114, %p17;
	selp.f32	%f124, %f114, %f122, %p17;
	and.b32  	%r333, %r404, 2;
	setp.eq.s32	%p18, %r333, 0;
	neg.f32 	%f125, %f123;
	selp.f32	%f126, %f123, %f125, %p18;
	add.s32 	%r334, %r404, 1;
	and.b32  	%r335, %r334, 2;
	setp.eq.s32	%p19, %r335, 0;
	neg.f32 	%f127, %f124;
	selp.f32	%f128, %f124, %f127, %p19;
	mul.f32 	%f36, %f214, %f128;
	mul.f32 	%f37, %f214, %f126;
	mul.f32 	%f129, %f37, %f37;
	fma.rn.f32 	%f38, %f36, %f36, %f129;
	sub.f32 	%f130, %f113, %f38;
	mov.f32 	%f131, 0f358637BD;
	max.f32 	%f132, %f130, %f131;
	sub.f32 	%f133, %f113, %f132;
	fma.rn.f32 	%f134, %f133, %f15, %f132;
	setp.lt.f32	%p20, %f134, 0f00800000;
	mul.f32 	%f135, %f134, 0f4B000000;
	selp.f32	%f39, %f135, %f134, %p20;
	selp.f32	%f136, 0fC1B80000, 0f00000000, %p20;
	mov.b32 	 %r336, %f39;
	add.s32 	%r337, %r336, -1059760811;
	and.b32  	%r338, %r337, -8388608;
	sub.s32 	%r339, %r336, %r338;
	mov.b32 	 %f137, %r339;
	cvt.rn.f32.s32	%f138, %r338;
	mov.f32 	%f139, 0f34000000;
	fma.rn.f32 	%f140, %f138, %f139, %f136;
	add.f32 	%f141, %f137, 0fBF800000;
	mov.f32 	%f142, 0f3E1039F6;
	mov.f32 	%f143, 0fBE055027;
	fma.rn.f32 	%f144, %f143, %f141, %f142;
	mov.f32 	%f145, 0fBDF8CDCC;
	fma.rn.f32 	%f146, %f144, %f141, %f145;
	mov.f32 	%f147, 0f3E0F2955;
	fma.rn.f32 	%f148, %f146, %f141, %f147;
	mov.f32 	%f149, 0fBE2AD8B9;
	fma.rn.f32 	%f150, %f148, %f141, %f149;
	mov.f32 	%f151, 0f3E4CED0B;
	fma.rn.f32 	%f152, %f150, %f141, %f151;
	mov.f32 	%f153, 0fBE7FFF22;
	fma.rn.f32 	%f154, %f152, %f141, %f153;
	mov.f32 	%f155, 0f3EAAAA78;
	fma.rn.f32 	%f156, %f154, %f141, %f155;
	mov.f32 	%f157, 0fBF000000;
	fma.rn.f32 	%f158, %f156, %f141, %f157;
	mul.f32 	%f159, %f158, %f141;
	fma.rn.f32 	%f160, %f159, %f141, %f141;
	mov.f32 	%f161, 0f3F317218;
	fma.rn.f32 	%f216, %f140, %f161, %f160;
	setp.lt.u32	%p21, %r336, 2139095040;
	@%p21 bra 	BB2_20;

	mov.f32 	%f162, 0f7F800000;
	fma.rn.f32 	%f216, %f39, %f162, %f162;

BB2_20:
	setp.eq.f32	%p22, %f39, 0f00000000;
	selp.f32	%f171, 0fFF800000, %f216, %p22;
	div.rn.f32 	%f172, %f171, %f1;
	add.f32 	%f173, %f172, 0f3F800000;
	mul.f32 	%f174, %f173, %f173;
	sub.f32 	%f176, %f113, %f174;
	div.rn.f32 	%f177, %f176, %f38;
	sqrt.rn.f32 	%f178, %f177;
	mul.f32 	%f179, %f36, %f178;
	mul.f32 	%f180, %f37, %f178;
	mul.f32 	%f181, %f13, %f179;
	mul.f32 	%f182, %f10, %f180;
	mul.f32 	%f183, %f14, %f180;
	mul.f32 	%f184, %f6, %f180;
	neg.f32 	%f185, %f184;
	fma.rn.f32 	%f186, %f11, %f179, %f182;
	fma.rn.f32 	%f187, %f12, %f179, %f183;
	sub.f32 	%f188, %f185, %f181;
	fma.rn.f32 	%f166, %f5, %f173, %f186;
	fma.rn.f32 	%f167, %f6, %f173, %f187;
	fma.rn.f32 	%f168, %f7, %f173, %f188;
	ld.global.u32 	%r340, [top_object];
	mov.u32 	%r342, 255;
	mov.u32 	%r343, 0;
	add.u64 	%rd89, %SP, 28;
	// inline asm
	call _rt_trace_mask_flags_64, (%r340, %f2, %f3, %f4, %f166, %f167, %f168, %r343, %f8, %f9, %r342, %r343, %rd89, %r58);
	// inline asm
	ld.global.u32 	%rd92, [launch_index];
	mov.u64 	%rd96, out_t;
	cvta.global.u64 	%rd91, %rd96;
	mov.u64 	%rd95, 0;
	// inline asm
	call (%rd90), _rt_buffer_get_64, (%rd91, %r58, %r56, %rd92, %rd95, %rd95, %rd95);
	// inline asm
	ld.f32 	%f189, [%rd90];
	setp.eq.f32	%p23, %f189, 0f7F800000;
	@%p23 bra 	BB2_27;

	ld.global.u32 	%rd99, [launch_index];
	mov.u64 	%rd151, out_p_x;
	cvta.global.u64 	%rd98, %rd151;
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r58, %r56, %rd99, %rd95, %rd95, %rd95);
	// inline asm
	ld.f32 	%f43, [%rd97];
	ld.global.u32 	%rd105, [launch_index];
	mov.u64 	%rd152, out_p_y;
	cvta.global.u64 	%rd104, %rd152;
	// inline asm
	call (%rd103), _rt_buffer_get_64, (%rd104, %r58, %r56, %rd105, %rd95, %rd95, %rd95);
	// inline asm
	ld.f32 	%f44, [%rd103];
	ld.global.u32 	%rd111, [launch_index];
	mov.u64 	%rd153, out_p_z;
	cvta.global.u64 	%rd110, %rd153;
	// inline asm
	call (%rd109), _rt_buffer_get_64, (%rd110, %r58, %r56, %rd111, %rd95, %rd95, %rd95);
	// inline asm
	ld.f32 	%f45, [%rd109];
	ld.global.u32 	%rd117, [launch_index];
	mov.u64 	%rd154, out_ng_x;
	cvta.global.u64 	%rd116, %rd154;
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd116, %r58, %r56, %rd117, %rd95, %rd95, %rd95);
	// inline asm
	ld.f32 	%f46, [%rd115];
	ld.global.u32 	%rd123, [launch_index];
	mov.u64 	%rd155, out_ng_y;
	cvta.global.u64 	%rd122, %rd155;
	// inline asm
	call (%rd121), _rt_buffer_get_64, (%rd122, %r58, %r56, %rd123, %rd95, %rd95, %rd95);
	// inline asm
	ld.f32 	%f47, [%rd121];
	ld.global.u32 	%rd129, [launch_index];
	mov.u64 	%rd156, out_ng_z;
	cvta.global.u64 	%rd128, %rd156;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd128, %r58, %r56, %rd129, %rd95, %rd95, %rd95);
	// inline asm
	ld.f32 	%f48, [%rd127];
	ld.global.u32 	%rd135, [launch_index];
	mov.u64 	%rd157, out_u;
	cvta.global.u64 	%rd134, %rd157;
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd134, %r58, %r56, %rd135, %rd95, %rd95, %rd95);
	// inline asm
	ld.f32 	%f49, [%rd133];
	ld.global.u32 	%rd141, [launch_index];
	mov.u64 	%rd158, out_v;
	cvta.global.u64 	%rd140, %rd158;
	// inline asm
	call (%rd139), _rt_buffer_get_64, (%rd140, %r58, %r56, %rd141, %rd95, %rd95, %rd95);
	// inline asm
	ld.f32 	%f50, [%rd139];
	ld.global.u32 	%rd147, [launch_index];
	mov.u64 	%rd159, out_shape_ptr;
	cvta.global.u64 	%rd146, %rd159;
	mov.u32 	%r364, 8;
	// inline asm
	call (%rd145), _rt_buffer_get_64, (%rd146, %r58, %r364, %rd147, %rd95, %rd95, %rd95);
	// inline asm
	ld.u64 	%rd8, [%rd145];
	setp.eq.s32	%p24, %r394, 0;
	@%p24 bra 	BB2_25;
	bra.uni 	BB2_22;

BB2_25:
	ld.global.u32 	%rd176, [launch_index];
	// inline asm
	call (%rd174), _rt_buffer_get_64, (%rd91, %r58, %r56, %rd176, %rd95, %rd95, %rd95);
	// inline asm
	ld.f32 	%f225, [%rd174];
	ld.global.u32 	%rd182, [launch_index];
	mov.u64 	%rd187, out_primitive_id;
	cvta.global.u64 	%rd181, %rd187;
	// inline asm
	call (%rd180), _rt_buffer_get_64, (%rd181, %r58, %r56, %rd182, %rd95, %rd95, %rd95);
	// inline asm
	ld.u32 	%r405, [%rd180];
	bra.uni 	BB2_26;

BB2_22:
	setp.eq.s64	%p25, %rd261, %rd8;
	@%p25 bra 	BB2_27;

	sub.f32 	%f190, %f222, %f43;
	sub.f32 	%f191, %f223, %f44;
	mul.f32 	%f192, %f191, %f47;
	fma.rn.f32 	%f193, %f190, %f46, %f192;
	sub.f32 	%f194, %f224, %f45;
	fma.rn.f32 	%f195, %f194, %f48, %f193;
	sub.f32 	%f196, %f2, %f222;
	sub.f32 	%f197, %f3, %f223;
	mul.f32 	%f198, %f220, %f197;
	fma.rn.f32 	%f199, %f219, %f196, %f198;
	sub.f32 	%f200, %f4, %f224;
	fma.rn.f32 	%f201, %f221, %f200, %f199;
	mul.f32 	%f202, %f201, %f195;
	setp.geu.f32	%p26, %f202, 0f00000000;
	@%p26 bra 	BB2_27;

	ld.global.u32 	%rd162, [launch_index];
	// inline asm
	call (%rd160), _rt_buffer_get_64, (%rd91, %r58, %r56, %rd162, %rd95, %rd95, %rd95);
	// inline asm
	ld.f32 	%f225, [%rd160];
	ld.global.u32 	%rd168, [launch_index];
	mov.u64 	%rd173, out_primitive_id;
	cvta.global.u64 	%rd167, %rd173;
	// inline asm
	call (%rd166), _rt_buffer_get_64, (%rd167, %r58, %r56, %rd168, %rd95, %rd95, %rd95);
	// inline asm
	ld.u32 	%r405, [%rd166];

BB2_26:
	mov.f32 	%f217, %f49;
	mov.f32 	%f218, %f50;
	mov.f32 	%f219, %f46;
	mov.f32 	%f220, %f47;
	mov.f32 	%f221, %f48;
	mov.f32 	%f222, %f43;
	mov.f32 	%f223, %f44;
	mov.f32 	%f224, %f45;
	mov.u64 	%rd261, %rd8;

BB2_27:
	add.s32 	%r394, %r394, 1;
	setp.lt.s32	%p27, %r394, 4;
	@%p27 bra 	BB2_2;

	ld.global.u32 	%rd190, [launch_index];
	// inline asm
	call (%rd188), _rt_buffer_get_64, (%rd91, %r58, %r56, %rd190, %rd95, %rd95, %rd95);
	// inline asm
	st.f32 	[%rd188], %f225;
	ld.global.u32 	%rd196, [launch_index];
	mov.u64 	%rd237, out_p_x;
	cvta.global.u64 	%rd195, %rd237;
	// inline asm
	call (%rd194), _rt_buffer_get_64, (%rd195, %r58, %r56, %rd196, %rd95, %rd95, %rd95);
	// inline asm
	st.f32 	[%rd194], %f222;
	ld.global.u32 	%rd202, [launch_index];
	mov.u64 	%rd238, out_p_y;
	cvta.global.u64 	%rd201, %rd238;
	// inline asm
	call (%rd200), _rt_buffer_get_64, (%rd201, %r58, %r56, %rd202, %rd95, %rd95, %rd95);
	// inline asm
	st.f32 	[%rd200], %f223;
	ld.global.u32 	%rd208, [launch_index];
	mov.u64 	%rd239, out_p_z;
	cvta.global.u64 	%rd207, %rd239;
	// inline asm
	call (%rd206), _rt_buffer_get_64, (%rd207, %r58, %r56, %rd208, %rd95, %rd95, %rd95);
	// inline asm
	st.f32 	[%rd206], %f224;
	ld.global.u32 	%rd214, [launch_index];
	mov.u64 	%rd240, out_u;
	cvta.global.u64 	%rd213, %rd240;
	// inline asm
	call (%rd212), _rt_buffer_get_64, (%rd213, %r58, %r56, %rd214, %rd95, %rd95, %rd95);
	// inline asm
	st.f32 	[%rd212], %f217;
	ld.global.u32 	%rd220, [launch_index];
	mov.u64 	%rd241, out_v;
	cvta.global.u64 	%rd219, %rd241;
	// inline asm
	call (%rd218), _rt_buffer_get_64, (%rd219, %r58, %r56, %rd220, %rd95, %rd95, %rd95);
	// inline asm
	st.f32 	[%rd218], %f218;
	ld.global.u32 	%rd226, [launch_index];
	mov.u64 	%rd242, out_shape_ptr;
	cvta.global.u64 	%rd225, %rd242;
	mov.u32 	%r386, 8;
	// inline asm
	call (%rd224), _rt_buffer_get_64, (%rd225, %r58, %r386, %rd226, %rd95, %rd95, %rd95);
	// inline asm
	st.u64 	[%rd224], %rd261;
	ld.global.u32 	%rd232, [launch_index];
	mov.u64 	%rd243, out_primitive_id;
	cvta.global.u64 	%rd231, %rd243;
	// inline asm
	call (%rd230), _rt_buffer_get_64, (%rd231, %r58, %r56, %rd232, %rd95, %rd95, %rd95);
	// inline asm
	st.u32 	[%rd230], %r405;
	bra.uni 	BB2_30;

BB2_29:
	ld.global.u32 	%rd246, [launch_index];
	mov.u64 	%rd256, out_shape_ptr;
	cvta.global.u64 	%rd245, %rd256;
	mov.u32 	%r390, 8;
	mov.u64 	%rd255, 0;
	// inline asm
	call (%rd244), _rt_buffer_get_64, (%rd245, %r58, %r390, %rd246, %rd255, %rd255, %rd255);
	// inline asm
	st.u64 	[%rd244], %rd255;
	ld.global.u32 	%rd252, [launch_index];
	mov.u64 	%rd257, out_t;
	cvta.global.u64 	%rd251, %rd257;
	// inline asm
	call (%rd250), _rt_buffer_get_64, (%rd251, %r58, %r56, %rd252, %rd255, %rd255, %rd255);
	// inline asm
	mov.u32 	%r393, 2139095040;
	st.u32 	[%rd250], %r393;

BB2_30:
	ret;
}

	// .globl	_Z7ray_hitv
.visible .entry _Z7ray_hitv(

)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<38>;
	.reg .b32 	%r<48>;
	.reg .b64 	%rd<155>;


	mov.u64 	%rd6, out_hit;
	cvta.global.u64 	%rd5, %rd6;
	mov.u32 	%r2, 1;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r2, %r2);
	// inline asm
	cvt.u32.u64	%r3, %rd1;
	setp.eq.s32	%p1, %r3, 0;
	@%p1 bra 	BB3_2;

	ld.global.u32 	%rd9, [launch_index];
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd5, %r2, %r2, %rd9, %rd12, %rd12, %rd12);
	// inline asm
	mov.u16 	%rs1, 1;
	st.u8 	[%rd7], %rs1;
	bra.uni 	BB3_5;

BB3_2:
	ld.global.u64 	%rd74, [shape_ptr];
	ld.global.u32 	%rd16, [launch_index];
	mov.u64 	%rd75, out_shape_ptr;
	cvta.global.u64 	%rd15, %rd75;
	mov.u32 	%r7, 8;
	mov.u64 	%rd73, 0;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd15, %r2, %r7, %rd16, %rd73, %rd73, %rd73);
	// inline asm
	st.u64 	[%rd14], %rd74;
	// inline asm
	call (%r8), _rt_get_primitive_index, ();
	// inline asm
	ld.global.u32 	%rd22, [launch_index];
	mov.u64 	%rd76, out_primitive_id;
	cvta.global.u64 	%rd21, %rd76;
	mov.u32 	%r26, 4;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r2, %r26, %rd22, %rd73, %rd73, %rd73);
	// inline asm
	st.u32 	[%rd20], %r8;
	ld.global.f32 	%f1, [uv];
	ld.global.u32 	%rd28, [launch_index];
	mov.u64 	%rd77, out_u;
	cvta.global.u64 	%rd27, %rd77;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd27, %r2, %r26, %rd28, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd26], %f1;
	ld.global.f32 	%f2, [uv+4];
	ld.global.u32 	%rd34, [launch_index];
	mov.u64 	%rd78, out_v;
	cvta.global.u64 	%rd33, %rd78;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r2, %r26, %rd34, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd32], %f2;
	ld.global.f32 	%f3, [p];
	ld.global.u32 	%rd40, [launch_index];
	mov.u64 	%rd79, out_p_x;
	cvta.global.u64 	%rd39, %rd79;
	// inline asm
	call (%rd38), _rt_buffer_get_64, (%rd39, %r2, %r26, %rd40, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd38], %f3;
	ld.global.f32 	%f4, [p+4];
	ld.global.u32 	%rd46, [launch_index];
	mov.u64 	%rd80, out_p_y;
	cvta.global.u64 	%rd45, %rd80;
	// inline asm
	call (%rd44), _rt_buffer_get_64, (%rd45, %r2, %r26, %rd46, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd44], %f4;
	ld.global.f32 	%f5, [p+8];
	ld.global.u32 	%rd52, [launch_index];
	mov.u64 	%rd81, out_p_z;
	cvta.global.u64 	%rd51, %rd81;
	// inline asm
	call (%rd50), _rt_buffer_get_64, (%rd51, %r2, %r26, %rd52, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd50], %f5;
	ld.global.f32 	%f6, [ng];
	ld.global.u32 	%rd58, [launch_index];
	mov.u64 	%rd82, out_ng_x;
	cvta.global.u64 	%rd57, %rd82;
	// inline asm
	call (%rd56), _rt_buffer_get_64, (%rd57, %r2, %r26, %rd58, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd56], %f6;
	ld.global.f32 	%f7, [ng+4];
	ld.global.u32 	%rd64, [launch_index];
	mov.u64 	%rd83, out_ng_y;
	cvta.global.u64 	%rd63, %rd83;
	// inline asm
	call (%rd62), _rt_buffer_get_64, (%rd63, %r2, %r26, %rd64, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd62], %f7;
	ld.global.f32 	%f8, [ng+8];
	ld.global.u32 	%rd70, [launch_index];
	mov.u64 	%rd84, out_ng_z;
	cvta.global.u64 	%rd69, %rd84;
	// inline asm
	call (%rd68), _rt_buffer_get_64, (%rd69, %r2, %r26, %rd70, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd68], %f8;
	ld.global.u32 	%r27, [fill_surface_interaction];
	setp.ne.s32	%p2, %r27, 1;
	@%p2 bra 	BB3_4;

	ld.global.f32 	%f9, [ns];
	ld.global.u32 	%rd87, [launch_index];
	mov.u64 	%rd139, out_ns_x;
	cvta.global.u64 	%rd86, %rd139;
	// inline asm
	call (%rd85), _rt_buffer_get_64, (%rd86, %r2, %r26, %rd87, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd85], %f9;
	ld.global.f32 	%f10, [ns+4];
	ld.global.u32 	%rd93, [launch_index];
	mov.u64 	%rd140, out_ns_y;
	cvta.global.u64 	%rd92, %rd140;
	// inline asm
	call (%rd91), _rt_buffer_get_64, (%rd92, %r2, %r26, %rd93, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd91], %f10;
	ld.global.f32 	%f11, [ns+8];
	ld.global.u32 	%rd99, [launch_index];
	mov.u64 	%rd141, out_ns_z;
	cvta.global.u64 	%rd98, %rd141;
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r2, %r26, %rd99, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd97], %f11;
	ld.global.f32 	%f12, [dp_du];
	ld.global.u32 	%rd105, [launch_index];
	mov.u64 	%rd142, out_dp_du_x;
	cvta.global.u64 	%rd104, %rd142;
	// inline asm
	call (%rd103), _rt_buffer_get_64, (%rd104, %r2, %r26, %rd105, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd103], %f12;
	ld.global.f32 	%f13, [dp_du+4];
	ld.global.u32 	%rd111, [launch_index];
	mov.u64 	%rd143, out_dp_du_y;
	cvta.global.u64 	%rd110, %rd143;
	// inline asm
	call (%rd109), _rt_buffer_get_64, (%rd110, %r2, %r26, %rd111, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd109], %f13;
	ld.global.f32 	%f14, [dp_du+8];
	ld.global.u32 	%rd117, [launch_index];
	mov.u64 	%rd144, out_dp_du_z;
	cvta.global.u64 	%rd116, %rd144;
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd116, %r2, %r26, %rd117, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd115], %f14;
	ld.global.f32 	%f15, [dp_dv];
	ld.global.u32 	%rd123, [launch_index];
	mov.u64 	%rd145, out_dp_dv_x;
	cvta.global.u64 	%rd122, %rd145;
	// inline asm
	call (%rd121), _rt_buffer_get_64, (%rd122, %r2, %r26, %rd123, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd121], %f15;
	ld.global.f32 	%f16, [dp_dv+4];
	ld.global.u32 	%rd129, [launch_index];
	mov.u64 	%rd146, out_dp_dv_y;
	cvta.global.u64 	%rd128, %rd146;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd128, %r2, %r26, %rd129, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd127], %f16;
	ld.global.f32 	%f17, [dp_dv+8];
	ld.global.u32 	%rd135, [launch_index];
	mov.u64 	%rd147, out_dp_dv_z;
	cvta.global.u64 	%rd134, %rd147;
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd134, %r2, %r26, %rd135, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd133], %f17;

BB3_4:
	ld.global.f32 	%f18, [p];
	ld.global.f32 	%f19, [ray];
	sub.f32 	%f20, %f18, %f19;
	ld.global.f32 	%f21, [ray+4];
	ld.global.f32 	%f22, [p+4];
	sub.f32 	%f23, %f22, %f21;
	ld.global.f32 	%f24, [ray+8];
	ld.global.f32 	%f25, [p+8];
	sub.f32 	%f26, %f25, %f24;
	mul.f32 	%f27, %f23, %f23;
	fma.rn.f32 	%f28, %f20, %f20, %f27;
	fma.rn.f32 	%f29, %f26, %f26, %f28;
	ld.global.f32 	%f30, [ray+12];
	ld.global.f32 	%f31, [ray+16];
	ld.global.f32 	%f32, [ray+20];
	mul.f32 	%f33, %f31, %f31;
	fma.rn.f32 	%f34, %f30, %f30, %f33;
	fma.rn.f32 	%f35, %f32, %f32, %f34;
	div.rn.f32 	%f36, %f29, %f35;
	sqrt.rn.f32 	%f37, %f36;
	ld.global.u32 	%rd150, [launch_index];
	mov.u64 	%rd154, out_t;
	cvta.global.u64 	%rd149, %rd154;
	// inline asm
	call (%rd148), _rt_buffer_get_64, (%rd149, %r2, %r26, %rd150, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd148], %f37;

BB3_5:
	ret;
}

	// .globl	_Z8ray_missv
.visible .entry _Z8ray_missv(

)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<29>;


	mov.u64 	%rd7, out_hit;
	cvta.global.u64 	%rd6, %rd7;
	mov.u32 	%r2, 1;
	// inline asm
	call (%rd2, %rd3, %rd4, %rd5), _rt_buffer_get_size_64, (%rd6, %r2, %r2);
	// inline asm
	cvt.u32.u64	%r3, %rd2;
	setp.eq.s32	%p1, %r3, 0;
	ld.global.u32 	%rd1, [launch_index];
	@%p1 bra 	BB4_2;

	mov.u64 	%rd13, 0;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd6, %r2, %r2, %rd1, %rd13, %rd13, %rd13);
	// inline asm
	mov.u16 	%rs1, 0;
	st.u8 	[%rd8], %rs1;
	bra.uni 	BB4_3;

BB4_2:
	mov.u64 	%rd27, out_shape_ptr;
	cvta.global.u64 	%rd16, %rd27;
	mov.u32 	%r7, 8;
	mov.u64 	%rd26, 0;
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd16, %r2, %r7, %rd1, %rd26, %rd26, %rd26);
	// inline asm
	st.u64 	[%rd15], %rd26;
	ld.global.u32 	%rd23, [launch_index];
	mov.u64 	%rd28, out_t;
	cvta.global.u64 	%rd22, %rd28;
	mov.u32 	%r9, 4;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r2, %r9, %rd23, %rd26, %rd26, %rd26);
	// inline asm
	mov.u32 	%r10, 2139095040;
	st.u32 	[%rd21], %r10;

BB4_3:
	ret;
}

	// .globl	_Z7ray_errv
.visible .entry _Z7ray_errv(

)
{
	.local .align 16 .b8 	__local_depot5[416];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<43>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<118>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<114>;


	mov.u64 	%SPL, __local_depot5;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r75), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p1, %r75, 1020;
	@%p1 bra 	BB5_61;
	bra.uni 	BB5_1;

BB5_61:
	ld.volatile.global.u32 	%r72, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r73, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r74, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r115), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p42, %r115, 0;
	@%p42 bra 	BB5_63;

	add.u64 	%rd108, %SP, 400;
	add.u64 	%rd109, %SPL, 400;
	st.local.u32 	[%rd109], %r72;
	st.local.u32 	[%rd109+4], %r73;
	st.local.u32 	[%rd109+8], %r74;
	mov.u64 	%rd110, $str;
	cvta.global.u64 	%rd111, %rd110;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd111;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd108;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r116, [retval0+0];
	
	//{
	}// Callseq End 18
	bra.uni 	BB5_63;

BB5_1:
	setp.eq.s32	%p2, %r75, 1005;
	@%p2 bra 	BB5_59;
	bra.uni 	BB5_2;

BB5_59:
	ld.volatile.global.u32 	%r69, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r70, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r113), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p41, %r113, 0;
	@%p41 bra 	BB5_63;

	add.u64 	%rd104, %SP, 400;
	add.u64 	%rd105, %SPL, 400;
	st.local.u32 	[%rd105], %r69;
	st.local.u32 	[%rd105+4], %r70;
	st.local.u32 	[%rd105+8], %r71;
	mov.u64 	%rd106, $str1;
	cvta.global.u64 	%rd107, %rd106;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd107;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd104;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r114, [retval0+0];
	
	//{
	}// Callseq End 17
	bra.uni 	BB5_63;

BB5_2:
	setp.eq.s32	%p3, %r75, 1021;
	@%p3 bra 	BB5_53;
	bra.uni 	BB5_3;

BB5_53:
	ld.volatile.global.u32 	%r63, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r64, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r65, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r66, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd18, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r67, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u64 	%rd19, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	mov.u64 	%rd113, 1;
	setp.lt.u32	%p38, %r63, 2;
	mov.u64 	%rd112, %rd113;
	@%p38 bra 	BB5_55;

	ld.volatile.global.u64 	%rd112, [_ZN21rti_internal_register24reg_exception_64_detail2E];

BB5_55:
	setp.lt.u32	%p39, %r63, 3;
	@%p39 bra 	BB5_57;

	ld.volatile.global.u64 	%rd113, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB5_57:
	ld.volatile.global.u32 	%r68, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd24, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd25, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd26, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r111), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p40, %r111, 0;
	@%p40 bra 	BB5_63;

	add.u64 	%rd100, %SP, 96;
	add.u64 	%rd101, %SPL, 96;
	st.local.u32 	[%rd101], %r64;
	st.local.u32 	[%rd101+4], %r65;
	st.local.u32 	[%rd101+8], %r66;
	st.local.u32 	[%rd101+12], %r63;
	st.local.u64 	[%rd101+16], %rd18;
	st.local.u32 	[%rd101+24], %r67;
	st.local.u64 	[%rd101+32], %rd19;
	st.local.u64 	[%rd101+40], %rd112;
	st.local.u64 	[%rd101+48], %rd113;
	st.local.u32 	[%rd101+56], %r68;
	st.local.u64 	[%rd101+64], %rd24;
	st.local.u64 	[%rd101+72], %rd25;
	st.local.u64 	[%rd101+80], %rd26;
	mov.u64 	%rd102, $str2;
	cvta.global.u64 	%rd103, %rd102;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd103;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd100;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r112, [retval0+0];
	
	//{
	}// Callseq End 16

BB5_63:
	ret;

BB5_3:
	setp.eq.s32	%p4, %r75, 1006;
	add.u64 	%rd27, %SP, 352;
	add.u64 	%rd28, %SPL, 352;
	add.s64 	%rd1, %rd28, 4;
	@%p4 bra 	BB5_44;
	bra.uni 	BB5_4;

BB5_44:
	ld.volatile.global.u32 	%r104, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p32, %r104, 1;
	@%p32 bra 	BB5_51;

	setp.eq.s32	%p33, %r104, 2;
	@%p33 bra 	BB5_49;
	bra.uni 	BB5_46;

BB5_49:
	ld.volatile.global.u32 	%r56, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r57, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r58, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r59, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd16, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r107), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p36, %r107, 0;
	@%p36 bra 	BB5_63;

	st.local.u32 	[%rd28], %r56;
	st.local.u32 	[%rd1], %r57;
	st.local.u32 	[%rd1+4], %r58;
	st.local.u32 	[%rd1+8], %r59;
	st.local.u64 	[%rd1+12], %rd16;
	mov.u64 	%rd92, $str4;
	cvta.global.u64 	%rd93, %rd92;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd93;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r108, [retval0+0];
	
	//{
	}// Callseq End 14
	bra.uni 	BB5_63;

BB5_4:
	setp.eq.s32	%p5, %r75, 1007;
	add.u64 	%rd29, %SP, 384;
	add.u64 	%rd30, %SPL, 384;
	add.s64 	%rd2, %rd30, 4;
	@%p5 bra 	BB5_35;
	bra.uni 	BB5_5;

BB5_35:
	ld.volatile.global.u32 	%r97, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p26, %r97, 1;
	@%p26 bra 	BB5_42;

	setp.eq.s32	%p27, %r97, 2;
	@%p27 bra 	BB5_40;
	bra.uni 	BB5_37;

BB5_40:
	ld.volatile.global.u32 	%r45, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r46, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r47, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r48, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r100), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p30, %r100, 0;
	@%p30 bra 	BB5_63;

	st.local.u32 	[%rd30], %r45;
	st.local.u32 	[%rd2], %r46;
	st.local.u32 	[%rd2+4], %r47;
	st.local.u32 	[%rd2+8], %r48;
	mov.u64 	%rd80, $str7;
	cvta.global.u64 	%rd81, %rd80;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd81;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r101, [retval0+0];
	
	//{
	}// Callseq End 11
	bra.uni 	BB5_63;

BB5_5:
	setp.eq.s32	%p6, %r75, 1018;
	@%p6 bra 	BB5_26;
	bra.uni 	BB5_6;

BB5_26:
	ld.volatile.global.u32 	%r90, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p20, %r90, 1;
	@%p20 bra 	BB5_33;

	setp.eq.s32	%p21, %r90, 2;
	@%p21 bra 	BB5_31;
	bra.uni 	BB5_28;

BB5_31:
	ld.volatile.global.u32 	%r35, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r36, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r37, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r38, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd13, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r93), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p24, %r93, 0;
	@%p24 bra 	BB5_63;

	mov.u64 	%rd64, $str11;
	cvta.global.u64 	%rd65, %rd64;
	add.u64 	%rd66, %SP, 288;
	add.u64 	%rd67, %SPL, 288;
	st.local.u64 	[%rd67], %rd65;
	st.local.v2.u32 	[%rd67+8], {%r35, %r36};
	st.local.v2.u32 	[%rd67+16], {%r37, %r38};
	st.local.u64 	[%rd67+24], %rd13;
	mov.u64 	%rd68, $str10;
	cvta.global.u64 	%rd69, %rd68;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd69;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r94, [retval0+0];
	
	//{
	}// Callseq End 8
	bra.uni 	BB5_63;

BB5_51:
	ld.volatile.global.u32 	%r60, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r61, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd17, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r109), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p37, %r109, 0;
	@%p37 bra 	BB5_63;

	st.local.u32 	[%rd28], %r60;
	st.local.u32 	[%rd1], %r61;
	st.local.u32 	[%rd1+4], %r62;
	st.local.u64 	[%rd1+12], %rd17;
	mov.u64 	%rd96, $str3;
	cvta.global.u64 	%rd97, %rd96;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r110, [retval0+0];
	
	//{
	}// Callseq End 15
	bra.uni 	BB5_63;

BB5_46:
	setp.ne.s32	%p34, %r104, 3;
	@%p34 bra 	BB5_63;

	ld.volatile.global.u32 	%r52, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r53, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r54, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r55, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd15, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r105), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p35, %r105, 0;
	@%p35 bra 	BB5_63;

	st.local.u32 	[%rd28], %r52;
	st.local.u32 	[%rd1], %r53;
	st.local.u32 	[%rd1+4], %r54;
	st.local.u32 	[%rd1+8], %r55;
	st.local.u64 	[%rd1+12], %rd15;
	mov.u64 	%rd88, $str5;
	cvta.global.u64 	%rd89, %rd88;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd89;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r106, [retval0+0];
	
	//{
	}// Callseq End 13
	bra.uni 	BB5_63;

BB5_6:
	setp.eq.s32	%p7, %r75, 1019;
	@%p7 bra 	BB5_24;
	bra.uni 	BB5_7;

BB5_24:
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd9, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd10, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd11, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r88), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p19, %r88, 0;
	@%p19 bra 	BB5_63;

	add.u64 	%rd56, %SP, 240;
	add.u64 	%rd57, %SPL, 240;
	st.local.u32 	[%rd57], %r28;
	st.local.u32 	[%rd57+4], %r29;
	st.local.u32 	[%rd57+8], %r30;
	st.local.u64 	[%rd57+16], %rd9;
	st.local.u64 	[%rd57+24], %rd10;
	st.local.u64 	[%rd57+32], %rd11;
	mov.u64 	%rd58, $str13;
	cvta.global.u64 	%rd59, %rd58;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd59;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd56;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r89, [retval0+0];
	
	//{
	}// Callseq End 6
	bra.uni 	BB5_63;

BB5_42:
	ld.volatile.global.u32 	%r49, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r50, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r51, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r102), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p31, %r102, 0;
	@%p31 bra 	BB5_63;

	add.u64 	%rd82, %SP, 400;
	add.u64 	%rd83, %SPL, 400;
	st.local.u32 	[%rd83], %r49;
	st.local.u32 	[%rd83+4], %r50;
	st.local.u32 	[%rd83+8], %r51;
	mov.u64 	%rd84, $str6;
	cvta.global.u64 	%rd85, %rd84;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r103, [retval0+0];
	
	//{
	}// Callseq End 12
	bra.uni 	BB5_63;

BB5_37:
	setp.ne.s32	%p28, %r97, 3;
	@%p28 bra 	BB5_63;

	ld.volatile.global.u32 	%r42, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r43, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r44, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r98), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p29, %r98, 0;
	@%p29 bra 	BB5_63;

	add.u64 	%rd74, %SP, 400;
	add.u64 	%rd75, %SPL, 400;
	st.local.u32 	[%rd75], %r42;
	st.local.u32 	[%rd75+4], %r43;
	st.local.u32 	[%rd75+8], %r44;
	mov.u64 	%rd76, $str8;
	cvta.global.u64 	%rd77, %rd76;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd77;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd74;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r99, [retval0+0];
	
	//{
	}// Callseq End 10
	bra.uni 	BB5_63;

BB5_7:
	setp.eq.s32	%p8, %r75, 1022;
	@%p8 bra 	BB5_22;
	bra.uni 	BB5_8;

BB5_22:
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd8, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r86), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p18, %r86, 0;
	@%p18 bra 	BB5_63;

	mov.b32 	 %f1, %r19;
	cvt.f64.f32	%fd1, %f1;
	mov.b32 	 %f2, %r20;
	mov.b32 	 %f3, %r21;
	mov.b32 	 %f4, %r22;
	mov.b32 	 %f5, %r23;
	mov.b32 	 %f6, %r24;
	cvt.f64.f32	%fd2, %f6;
	mov.b32 	 %f7, %r26;
	mov.b32 	 %f8, %r27;
	add.u64 	%rd51, %SP, 0;
	add.u64 	%rd52, %SPL, 0;
	st.local.u32 	[%rd52], %r16;
	st.local.u32 	[%rd52+4], %r17;
	st.local.u32 	[%rd52+8], %r18;
	mov.b64 	 %rd53, %fd1;
	st.local.v2.u64 	[%rd52+16], {%rd8, %rd53};
	cvt.f64.f32	%fd3, %f3;
	cvt.f64.f32	%fd4, %f2;
	st.local.v2.f64 	[%rd52+32], {%fd4, %fd3};
	cvt.f64.f32	%fd5, %f5;
	cvt.f64.f32	%fd6, %f4;
	st.local.v2.f64 	[%rd52+48], {%fd6, %fd5};
	st.local.f64 	[%rd52+64], %fd2;
	st.local.u32 	[%rd52+72], %r25;
	cvt.f64.f32	%fd7, %f8;
	cvt.f64.f32	%fd8, %f7;
	st.local.v2.f64 	[%rd52+80], {%fd8, %fd7};
	mov.u64 	%rd54, $str14;
	cvta.global.u64 	%rd55, %rd54;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r87, [retval0+0];
	
	//{
	}// Callseq End 5
	bra.uni 	BB5_63;

BB5_33:
	ld.volatile.global.u32 	%r39, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r40, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r41, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd14, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r95), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p25, %r95, 0;
	@%p25 bra 	BB5_63;

	st.local.u32 	[%rd28], %r39;
	st.local.u32 	[%rd1], %r40;
	st.local.u32 	[%rd1+4], %r41;
	st.local.u64 	[%rd1+12], %rd14;
	mov.u64 	%rd72, $str9;
	cvta.global.u64 	%rd73, %rd72;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd73;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r96, [retval0+0];
	
	//{
	}// Callseq End 9
	bra.uni 	BB5_63;

BB5_28:
	setp.ne.s32	%p22, %r90, 3;
	@%p22 bra 	BB5_63;

	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r32, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r33, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r34, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd12, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r91), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p23, %r91, 0;
	@%p23 bra 	BB5_63;

	st.local.u32 	[%rd28], %r31;
	st.local.u32 	[%rd1], %r32;
	st.local.u32 	[%rd1+4], %r33;
	st.local.u32 	[%rd1+8], %r34;
	st.local.u64 	[%rd1+12], %rd12;
	mov.u64 	%rd62, $str12;
	cvta.global.u64 	%rd63, %rd62;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd63;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r92, [retval0+0];
	
	//{
	}// Callseq End 7
	bra.uni 	BB5_63;

BB5_8:
	setp.eq.s32	%p9, %r75, 1003;
	@%p9 bra 	BB5_20;
	bra.uni 	BB5_9;

BB5_20:
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd4, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd5, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd6, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	ld.volatile.global.u64 	%rd7, [_ZN21rti_internal_register24reg_exception_64_detail3E];
	// inline asm
	call (%r84), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p17, %r84, 0;
	@%p17 bra 	BB5_63;

	add.u64 	%rd47, %SP, 192;
	add.u64 	%rd48, %SPL, 192;
	st.local.u32 	[%rd48], %r13;
	st.local.u32 	[%rd48+4], %r14;
	st.local.u32 	[%rd48+8], %r15;
	st.local.v2.u64 	[%rd48+16], {%rd4, %rd5};
	st.local.v2.u64 	[%rd48+32], {%rd6, %rd7};
	mov.u64 	%rd49, $str15;
	cvta.global.u64 	%rd50, %rd49;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd50;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd47;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r85, [retval0+0];
	
	//{
	}// Callseq End 4
	bra.uni 	BB5_63;

BB5_9:
	setp.eq.s32	%p10, %r75, 1004;
	@%p10 bra 	BB5_18;
	bra.uni 	BB5_10;

BB5_18:
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd3, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r82), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p16, %r82, 0;
	@%p16 bra 	BB5_63;

	add.u64 	%rd43, %SP, 320;
	add.u64 	%rd44, %SPL, 320;
	st.local.u32 	[%rd44], %r9;
	st.local.u32 	[%rd44+4], %r10;
	st.local.u32 	[%rd44+8], %r11;
	st.local.u64 	[%rd44+16], %rd3;
	st.local.u32 	[%rd44+24], %r12;
	mov.u64 	%rd45, $str16;
	cvta.global.u64 	%rd46, %rd45;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd43;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r83, [retval0+0];
	
	//{
	}// Callseq End 3
	bra.uni 	BB5_63;

BB5_10:
	add.s32 	%r2, %r75, -1024;
	setp.lt.u32	%p11, %r2, 64512;
	@%p11 bra 	BB5_16;
	bra.uni 	BB5_11;

BB5_16:
	ld.volatile.global.u32 	%r6, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r80), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p15, %r80, 0;
	@%p15 bra 	BB5_63;

	add.s32 	%r117, %r75, -1024;
	st.local.u32 	[%rd30], %r117;
	st.local.u32 	[%rd2], %r6;
	st.local.u32 	[%rd2+4], %r7;
	st.local.u32 	[%rd2+8], %r8;
	mov.u64 	%rd41, $str17;
	cvta.global.u64 	%rd42, %rd41;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd42;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r81, [retval0+0];
	
	//{
	}// Callseq End 2
	bra.uni 	BB5_63;

BB5_11:
	setp.eq.s32	%p12, %r75, 1023;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	@%p12 bra 	BB5_14;
	bra.uni 	BB5_12;

BB5_14:
	// inline asm
	call (%r78), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p14, %r78, 0;
	@%p14 bra 	BB5_63;

	add.u64 	%rd35, %SP, 400;
	add.u64 	%rd36, %SPL, 400;
	st.local.u32 	[%rd36], %r3;
	st.local.u32 	[%rd36+4], %r4;
	st.local.u32 	[%rd36+8], %r5;
	mov.u64 	%rd37, $str18;
	cvta.global.u64 	%rd38, %rd37;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd38;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r79, [retval0+0];
	
	//{
	}// Callseq End 1
	bra.uni 	BB5_63;

BB5_12:
	// inline asm
	call (%r76), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p13, %r76, 0;
	@%p13 bra 	BB5_63;

	add.u64 	%rd31, %SP, 400;
	add.u64 	%rd32, %SPL, 400;
	st.local.u32 	[%rd32], %r3;
	st.local.u32 	[%rd32+4], %r4;
	st.local.u32 	[%rd32+8], %r5;
	mov.u64 	%rd33, $str19;
	cvta.global.u64 	%rd34, %rd33;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd34;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r77, [retval0+0];
	
	//{
	}// Callseq End 0
	bra.uni 	BB5_63;
}


